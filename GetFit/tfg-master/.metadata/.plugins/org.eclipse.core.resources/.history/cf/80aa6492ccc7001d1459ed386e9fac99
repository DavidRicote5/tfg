package org.getfit.services;

import java.time.LocalDate;
import java.util.List;
import org.getfit.entities.Usuario;
import org.getfit.repositories.UsuarioRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@Service
public class UsuarioService {

	@Autowired
	private UsuarioRepository usuarioRepository;

	public List<Usuario> getUsuarios() {
		return usuarioRepository.findAll();
	}

	public Usuario saveAdmin(
			String nombre, 
			String loginname, 
			String password, 
			LocalDate fnac,
			String extension,
			Long idPaisNace, 
			Long idPaisResidencia,
			Long[] idGustos, 
			Long[] idOdios 
			) throws Exception {
		
		// Gestión de atributos "regulares"
		Usuario persona = new Persona(nombre,loginname,(new BCryptPasswordEncoder()).encode(password), fnac , extension);

		// Gestión de roles
		Rol rol = rolRepository.findByNombre("admin");
		persona.setRol(rol);
		
		try {
			personaRepository.saveAndFlush(persona);
			return persona;
		} catch (Exception e) {
			throw new Exception("El/la persona " + nombre + " ya existe");
		}
	}
	
	public void saveUsuario(String nombre) throws Exception {
		Usuario usuario = Usuario.builder().nombre(nombre).build();
		try {
			usuarioRepository.saveAndFlush(usuario);
		} catch (Exception e) {
			throw new Exception("El/la usuario " + nombre + " ya existe");
		}
	}

	public Usuario getUsuarioById(Long id) {
		return usuarioRepository.findById(id).get();
	}

	public void updateUsuario(Long id, String nombre) throws Exception {
		Usuario usuario = usuarioRepository.findById(id).get();
		usuario.setNombre(nombre);
		try {
			usuarioRepository.saveAndFlush(usuario);
		} catch (Exception e) {
			throw new Exception("El/la usuario " + nombre + " ya existe");
		}
	}

	public void deleteUsuario(Long id) {
		Usuario usuario = usuarioRepository.findById(id).get();
		usuarioRepository.delete(usuario);
	}
}

